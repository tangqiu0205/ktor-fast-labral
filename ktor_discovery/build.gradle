apply plugin: 'kotlin'
apply plugin: 'java-library'
apply plugin: 'kotlin-kapt'

group 'com.tangqiu.cloud'
version '1.0.0-SNAPSHOT'

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    main.resources.srcDirs = ['resources']
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-jackson:$ktor_version"

    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    implementation "io.ktor:ktor-client-jackson:$ktor_version"
    implementation "io.ktor:ktor-client-auth:$ktor_version"
    implementation "io.ktor:ktor-client-logging:$ktor_version"

    implementation "com.netflix.eureka:eureka-client:$eureka_version"
    implementation "com.netflix.ribbon:ribbon-core:$ribbon_version"
    implementation "com.netflix.ribbon:ribbon-archaius:$ribbon_version"
    implementation "com.netflix.ribbon:ribbon-eureka:$ribbon_version"
    implementation "com.netflix.ribbon:ribbon-loadbalancer:$ribbon_version"

    //    nacos-javasdk
    compileOnly "com.alibaba.nacos:nacos-client:$nacos_version"

    implementation "com.google.auto.service:auto-service:$autoService_version"
    kapt "com.google.auto.service:auto-service:$autoService_version"
    implementation "io.swagger.codegen.v3:swagger-codegen:$swagger_codegen_version"
    implementation "com.squareup:kotlinpoet:$kotlinpoet_version"

    implementation 'com.tangqiu.cloud:ktor_config:1.0.0-SNAPSHOT'
    implementation 'com.tangqiu.cloud:ktor_cache:1.0.0-SNAPSHOT'
    implementation 'com.tangqiu.cloud:ktor_openapi:1.0.0-SNAPSHOT'
    implementation 'xerces:xercesImpl:2.12.2'
}
configurations.all {
    resolutionStrategy {
        force "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        force "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    }
}
apply from: "../publish.gradle"